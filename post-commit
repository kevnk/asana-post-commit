#!/bin/bash

# -----------------------
# necessary configuration:
# git config --global user.asana-token "MY_ASANA_API_TOKEN" # @see http://app.asana.com/-/account_api
# Change `repoUrl` below to match the link to access your repo
# -----------------------

apiToken=$(git config user.asana-token)

# defaults
if [ $apiToken == '' ] ; then exit 0; fi

repoUrl='https://bitbucket.org/<your_username>/<your_repo>';
print_comment=$(git log --pretty=format:"<b>commit <code>%h</code>:</b> %s
<a href=\"${repoUrl}/commits/%h\">%h</a>" -n1)

# Comment on the task that's related to the branch name
if branch=$(git symbolic-ref --short -q HEAD)
then
    branchUrl=`echo "${repoUrl}/branch/${branch}"`;
    print_comment=`echo "${print_comment}
<a href=\"${branchUrl}\">${branch}</a>"`;
    if taskid=`echo $branch | egrep -o '^feature\/?[0-9]+' | awk -F \/ '{print $2}'`
    then
        # Make request to asana
        curl -X POST \
            https://app.asana.com/api/1.0/tasks/${taskid}/stories \
            -H "authorization: Bearer ${apiToken}" \
            --data-urlencode "html_text=${print_comment}" > /dev/null 2>&1
    else
        echo "branch must be named 'feature/TASKID_description-of-task"
    fi
else
  echo "not on any branch"
fi


# Comment on tasks mentioned in the commit message
# regex pattern to recognize a story number
taskid_pattern='#([0-9]*)'
# regex pattern to recognize a "closing this ticket" word
closes_pattern='([Ff]ix|[Cc]lose|[Cc]losing)'
# regex pattern to recognize an "and" word (eg "fixes #1, #2, and #3")
and_pattern='([Aa]nd|&)'
# get the checkin comment for parsing
comment=$(git log --pretty=format:"%s %b" -n1)

# break the commit comment down into words
IFS=' ' read -a words <<< "$comment"

for element in "${words[@]}"
do
    # if we have a task id, save it to the appropriate array
    if [[ $element =~ $taskid_pattern ]]; then
    if [ "${closes}" == "YES" ]; then
        closed=("${closed[@]}" "${BASH_REMATCH[1]}")
    fi
    referenced=("${referenced[@]}" "${BASH_REMATCH[1]}")
    # or else if we have a "closes" word, set the tracking bool accordingly
    elif [[ $element =~ $closes_pattern ]]; then
    closes='YES'
    # and if we don't, set us back to referencing
    # (if we're an "and", don't change any state)
    elif [[ ! $element =~ $and_pattern ]]; then
    closes='NO'
    fi
done

# touch the stories we've referenced
for element in "${referenced[@]}"
do
    curl -X POST \
        https://app.asana.com/api/1.0/tasks/${element}/stories \
        -H "authorization: Bearer ${apiToken}" \
        --data-urlencode "html_text=${print_comment}" > /dev/null 2>&1
done

# close the tasks we've fixed
for element in "${closed[@]}"
do
    curl -X PUT \
        https://app.asana.com/api/1.0/tasks/${element} \
        -H "authorization: Bearer ${apiToken}" \
        --data-urlencode "completed=true" > /dev/null 2>&1
done
